@using SportApp.Client.IServices
@using SportApp.Shared.ViewModel;
@using SportApp.Client.Services;
@using ChartJs.Blazor.PieChart


<Chart Config="_config" @ref="_piechart"></Chart>

@code{
    private Chart _piechart;
    private PieConfig _config;

    protected override void OnInitialized()
    {
        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "ChartJs.Blazor Pie Chart"
                }
            }
        };

        //foreach (string color in new[] { "Biking", "Running", "Walking", "Swimming", "Resistance Training" })
        //{
        //    _config.Data.Labels.Add(color);
        //}

        PieDataset<int> dataset = new PieDataset<int>()
        {
            BackgroundColor = new[]
        {
            ColorUtil.ColorHexString(255, 99, 132), // Slice 1 aka "Red"
            ColorUtil.ColorHexString(255, 205, 86), // Slice 2 aka "Yellow"
            ColorUtil.ColorHexString(75, 192, 192), // Slice 3 aka "Green"
            ColorUtil.ColorHexString(54, 162, 235), // Slice 4 aka "Blue"
        }
        };

        _config.Data.Datasets.Add(dataset);
        //string[] color = new[] { "Biking", "Running", "Walking", "Swimming", "Resistance Training" };
        //int[] s = new[] { 2, 3, 8, 0, 32 };
        //Update(color, s);
    }
    PieDataset<int> dataset;


    public void Update(string[] colorTable, int [] s)
    {
        //_config.Data.Datasets.Clear();

        foreach (string color in colorTable)
        {
            _config.Data.Labels.Add(color);
        }

        _config.Data.Datasets.Clear();

        PieDataset<int> dataset = new PieDataset<int>(s)
        {
            BackgroundColor = new[]
            {
            ColorUtil.ColorHexString(255, 99, 132), // Slice 1 aka "Red"
            ColorUtil.ColorHexString(255, 205, 86), // Slice 2 aka "Yellow"
            ColorUtil.ColorHexString(75, 192, 192), // Slice 3 aka "Green"
            ColorUtil.ColorHexString(54, 162, 235), // Slice 4 aka "Blue"
            ColorUtil.ColorHexString(21, 212, 192), // 
            ColorUtil.ColorHexString(154, 62, 25), // 
        }
        };

        _config.Data.Datasets.Add(dataset);

        _piechart.Update();
        //dataset = (piedataset<int>)_config.data.datasets[0];
        //dataset.clear();

        //trainingsessiondto[] sessions = await localactivityservices.gettrainingsession(1);

        //s[0] = 3;
        //s[1] = 4;
        //s[2] = 3;
        //s[3] = 4;

        //_config.data.datasets.add(dataset);


        //foreach (var item in sessions)
        //{
        //    if (item.id == 1) // cycling
        //        dataset.data[0] += item.calories;
        //}
        //calories.sort((t1, t2) => t1.time.compareto(t2.time));

        //foreach (var y in calories)
        //    dataset1.add((new timepoint(startingtime.addseconds(y.time), y.calories)));



        //_config.data.datasets[0] = dataset1;

        //statehaschanged();
        //_chart.update();
    }

}
