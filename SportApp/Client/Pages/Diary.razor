@page "/diary"

@using System.Net.Http.Headers
@using SportApp.Shared.Services;
@using System.IO;
@using System.Xml.Serialization;

@inject SportApp.Client.LoginLogic.LoginState LoginState
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject ILoginServices LocalLoginServices
@inject HttpClient http

<InputFile OnChange="HandleFileSelected" />

@if (file != null)
{
    <p>Number of lines read: @numLines</p>
    <button @onclick="CountLines">Count</button>

    <p> data: @data </p>
}

@code {
    string token;
    int id;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override async Task OnInitializedAsync()
    {
        id = await localStorage.GetItemAsync<int>("Id");
        token = await localStorage.GetItemAsync<string>("Token");
        http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        // needs to be automized
        if (id == 0)
        {
            NavigationManager.NavigateTo("/");
            LoginState.LoggedIn = false;
        }
        var l = await LocalLoginServices.GetUser(2);
    }
}

@code {
    int numLines;
    string data;
    string line;
    IFileListEntry file;

    void HandleFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();

    }

    async Task CountLines()
    {
        using (var stream2 = new MemoryStream())
        {
            await file.Data.CopyToAsync(stream2);   // although file.Data is itself a stream, using it directly causes "synchronous reads are not supported" errors below.
            stream2.Seek(0, SeekOrigin.Begin);      // at the end of the copy method, we are at the end of both the input and output stream and need to reset the one we want to work with.
            var reader = new System.IO.StreamReader(stream2);

            XmlSerializer serializer = new XmlSerializer(typeof(TrainingCenterDatabase));

            // Declare an object variable of the type to be deserialized.
            TrainingCenterDatabase i;

            i = (TrainingCenterDatabase)serializer.Deserialize(reader);
            string s = "S";
        }


        //while ((line = await reader.ReadLineAsync()) != null)
        //{
        //    data += line;
        //    numLines++;
        //}

    }

    // NOTE: Generated code may require at least .NET Framework 4.5 or .NET Core/Standard 2.0.
    /// <remarks/>
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class TrainingCenterDatabase
    {

        private TrainingCenterDatabaseActivities activitiesField;

        /// <remarks/>
        public TrainingCenterDatabaseActivities Activities
        {
            get
            {
                return this.activitiesField;
            }
            set
            {
                this.activitiesField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class TrainingCenterDatabaseActivities
    {

        private TrainingCenterDatabaseActivitiesActivity activityField;

        /// <remarks/>
        public TrainingCenterDatabaseActivitiesActivity Activity
        {
            get
            {
                return this.activityField;
            }
            set
            {
                this.activityField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class TrainingCenterDatabaseActivitiesActivity
    {

        private System.DateTime idField;

        private TrainingCenterDatabaseActivitiesActivityLap lapField;

        private string sportField;

        /// <remarks/>
        public System.DateTime Id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }

        /// <remarks/>
        public TrainingCenterDatabaseActivitiesActivityLap Lap
        {
            get
            {
                return this.lapField;
            }
            set
            {
                this.lapField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Sport
        {
            get
            {
                return this.sportField;
            }
            set
            {
                this.sportField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class TrainingCenterDatabaseActivitiesActivityLap
    {

        private decimal totalTimeSecondsField;

        private decimal distanceMetersField;

        private byte caloriesField;

        private string intensityField;

        private byte cadenceField;

        private string triggerMethodField;

        private TrainingCenterDatabaseActivitiesActivityLapTrackpoint[] trackField;

        private System.DateTime startTimeField;

        /// <remarks/>
        public decimal TotalTimeSeconds
        {
            get
            {
                return this.totalTimeSecondsField;
            }
            set
            {
                this.totalTimeSecondsField = value;
            }
        }

        /// <remarks/>
        public decimal DistanceMeters
        {
            get
            {
                return this.distanceMetersField;
            }
            set
            {
                this.distanceMetersField = value;
            }
        }

        /// <remarks/>
        public byte Calories
        {
            get
            {
                return this.caloriesField;
            }
            set
            {
                this.caloriesField = value;
            }
        }

        /// <remarks/>
        public string Intensity
        {
            get
            {
                return this.intensityField;
            }
            set
            {
                this.intensityField = value;
            }
        }

        /// <remarks/>
        public byte Cadence
        {
            get
            {
                return this.cadenceField;
            }
            set
            {
                this.cadenceField = value;
            }
        }

        /// <remarks/>
        public string TriggerMethod
        {
            get
            {
                return this.triggerMethodField;
            }
            set
            {
                this.triggerMethodField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Trackpoint", IsNullable = false)]
        public TrainingCenterDatabaseActivitiesActivityLapTrackpoint[] Track
        {
            get
            {
                return this.trackField;
            }
            set
            {
                this.trackField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.startTimeField;
            }
            set
            {
                this.startTimeField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class TrainingCenterDatabaseActivitiesActivityLapTrackpoint
    {

        private System.DateTime timeField;

        private TrainingCenterDatabaseActivitiesActivityLapTrackpointPosition positionField;

        private decimal distanceMetersField;

        private byte cadenceField;

        /// <remarks/>
        public System.DateTime Time
        {
            get
            {
                return this.timeField;
            }
            set
            {
                this.timeField = value;
            }
        }

        /// <remarks/>
        public TrainingCenterDatabaseActivitiesActivityLapTrackpointPosition Position
        {
            get
            {
                return this.positionField;
            }
            set
            {
                this.positionField = value;
            }
        }

        /// <remarks/>
        public decimal DistanceMeters
        {
            get
            {
                return this.distanceMetersField;
            }
            set
            {
                this.distanceMetersField = value;
            }
        }

        /// <remarks/>
        public byte Cadence
        {
            get
            {
                return this.cadenceField;
            }
            set
            {
                this.cadenceField = value;
            }
        }
    }

    /// <remarks/>
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class TrainingCenterDatabaseActivitiesActivityLapTrackpointPosition
    {

        private decimal latitudeDegreesField;

        private decimal longitudeDegreesField;

        /// <remarks/>
        public decimal LatitudeDegrees
        {
            get
            {
                return this.latitudeDegreesField;
            }
            set
            {
                this.latitudeDegreesField = value;
            }
        }

        /// <remarks/>
        public decimal LongitudeDegrees
        {
            get
            {
                return this.longitudeDegreesField;
            }
            set
            {
                this.longitudeDegreesField = value;
            }
        }
    }

}
