@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Client.LoginLogic.LoginState LoginState
@inject NavigationManager NavigationManager

@if (LoginState.LoggedIn)
{
    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="diary">
                    <MatIcon style="margin-right:6px">book</MatIcon><span aria-hidden="true"></span> Diary
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="profile">
                    <MatIcon style="margin-right:6px">book</MatIcon><span aria-hidden="true"></span> Profile
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" @onclick="Logout" href="" Match="NavLinkMatch.All">
                    <MatIcon style="margin-right:6px">exit_to_app</MatIcon><span aria-hidden="true"></span> Logout
                </NavLink>
            </li>
        </ul>
    </div>
}
@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
    {
        LoginState.OnChange += StateHasChanged;
    }
    public void Dispose()
    {
        LoginState.OnChange -= StateHasChanged;
    }
    public void Logout()
    {
        localStorage.ClearAsync();
        LoginState.LoggedIn = false;
        NavigationManager.NavigateTo("/");
    }
}
